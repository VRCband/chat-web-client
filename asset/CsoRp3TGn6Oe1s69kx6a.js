var u=Object.defineProperty;var f=(l,e,t)=>e in l?u(l,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):l[e]=t;var d=(l,e,t)=>f(l,typeof e!="symbol"?e+"":e,t);import{ap as c,C as g,ao as p,an as h}from"./DeTGZYeDNQQzD2Hg2g8t.js";import{C as y}from"./D_ZpYC3Ew8Bezl-0h3OI.js";import"./DmEtstg7swQ7i8QGEN4D.js";import"./CPWJQrUVesy-x3hwZUj8.js";import"./C4XUAn8A-wncPJhjaBPs.js";import"./B9fJR13iWWehQ2BrcfYV.js";import"./DMwlXDwmyiEQ8L43jrSt.js";import"./BjxM3yAyLpCQgAkN4H_j.js";import"./DfwHk0sCjMwE-hZzvBvJ.js";import"./CdDYBQguj4dY3sfHicOM.js";import"./DYOmRhjMlohAT47Pt9dd.js";import{d as m}from"./fynzmAtJ_PmpHXIxRwqH.js";var v=Object.defineProperty,S=Object.getOwnPropertyDescriptor,s=(l,e,t,a)=>{for(var o=a>1?void 0:a?S(e,t):e,i=l.length-1,n;i>=0;i--)(n=l[i])&&(o=(a?n(e,t,o):n(o))||o);return a&&o&&v(e,t,o),o};class r{constructor(e){d(this,"app");d(this,"channels");d(this,"collapsedCategories");d(this,"saveCollapsedStateDebounced",m(()=>this.saveCollapsedState(),500));this.app=e,this.channels=c.map(),this.collapsedCategories=c.map(),this.loadCollapsedState()}add(e){this.channels.set(e.id,new y(this.app,e))}update(e){const t=this.channels.get(e.id);t?t.update(e):this.add(e)}addAll(e){e.forEach(t=>this.add(t))}get(e){return this.channels.get(e)}get all(){return Array.from(this.channels.values())}remove(e){this.channels.delete(e)}get count(){return this.channels.size}sortPosition(e){return e.sort((t,a)=>(t.position??0)-(a.position??0))}has(e){return this.channels.has(e)}toggleCategoryCollapse(e,t){this.collapsedCategories.has(e)||this.collapsedCategories.set(e,new Set);const a=this.collapsedCategories.get(e);a.has(t)?a.delete(t):a.add(t),this.saveCollapsedStateDebounced()}isCategoryCollapsed(e,t){var a;return((a=this.collapsedCategories.get(e))==null?void 0:a.has(t))??!1}getVisibleChannelsForGuild(e){const t=this.app.guilds.get(e);if(!t)return[];const a=t.channels,o=this.collapsedCategories.get(e)||new Set;return a.filter((i,n)=>{if(i.type===g.GuildCategory)return!0;const C=this.findParentCategoryId(a,n);return C?!o.has(C):!0})}findParentCategoryId(e,t){for(let a=t-1;a>=0;a--){const o=e[a];if(o.type===g.GuildCategory)return o.id}return null}loadCollapsedState(){try{const e=localStorage.getItem("collapsedChannelCategories");e&&JSON.parse(e).forEach(([a,o])=>{this.collapsedCategories.set(a,new Set(o))})}catch(e){console.warn("Failed to load collapsed channel categories:",e)}}saveCollapsedState(){try{const e=Array.from(this.collapsedCategories.entries()).map(([t,a])=>[t,Array.from(a)]);localStorage.setItem("collapsedChannelCategories",JSON.stringify(e))}catch(e){console.warn("Failed to save collapsed channel categories:",e)}}}s([c],r.prototype,"channels",2);s([c],r.prototype,"collapsedCategories",2);s([p],r.prototype,"add",1);s([p],r.prototype,"update",1);s([p],r.prototype,"addAll",1);s([h],r.prototype,"all",1);s([p],r.prototype,"remove",1);s([h],r.prototype,"count",1);s([p],r.prototype,"toggleCategoryCollapse",1);s([h],r.prototype,"isCategoryCollapsed",1);s([h],r.prototype,"getVisibleChannelsForGuild",1);s([p],r.prototype,"loadCollapsedState",1);s([p],r.prototype,"saveCollapsedState",1);export{r as C};
